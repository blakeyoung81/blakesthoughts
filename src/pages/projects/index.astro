---
import { getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';

const allProjects = await getCollection('projects');

// Sort projects by date in descending order
const sortedProjects = allProjects.sort(
  (a, b) => b.data.pubDate.getTime() - a.data.pubDate.getTime()
);

// Format date function
const formatDate = (date) => {
  return new Date(date).toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });
};
---

<BaseLayout title="Projects">
  <div class="max-w-4xl mx-auto">
    <div class="mb-12">
      <h1 class="text-4xl font-bold mb-4">Projects</h1>
      <p class="text-xl text-zinc-700 dark:text-zinc-300">
        Software, med-tech builds, and other technical explorations.
      </p>
    </div>
    
    <div class="space-y-12">
      {sortedProjects.map((project) => (
        <article class="grid md:grid-cols-3 gap-6 border-b border-zinc-200 dark:border-zinc-800 pb-12 last:border-0">
          {project.data.cover && (
            <div class="md:col-span-1">
              <a href={`/projects/${project.slug}`}>
                <img 
                  src={project.data.cover} 
                  alt={project.data.title} 
                  class="w-full h-auto rounded-lg shadow-sm hover:shadow-md transition"
                />
              </a>
            </div>
          )}
          
          <div class={project.data.cover ? "md:col-span-2" : "md:col-span-3"}>
            <h2 class="text-2xl font-bold mb-2">
              <a href={`/projects/${project.slug}`} class="hover:text-accent transition">
                {project.data.title}
              </a>
            </h2>
            
            <div class="flex flex-wrap gap-2 mb-3">
              {project.data.tech.map(tech => (
                <span class="bg-zinc-100 dark:bg-zinc-800 text-xs px-2 py-1 rounded">{tech}</span>
              ))}
            </div>
            
            <div class="text-sm text-zinc-500 mb-4 flex gap-4">
              <time datetime={project.data.pubDate.toISOString()}>
                {formatDate(project.data.pubDate)}
              </time>
              
              <a href={project.data.repo} target="_blank" rel="noopener noreferrer" class="text-accent hover:underline">
                Repository
              </a>
              
              {project.data.liveDemo && (
                <a href={project.data.liveDemo} target="_blank" rel="noopener noreferrer" class="text-accent hover:underline">
                  Live Demo
                </a>
              )}
            </div>
            
            <p class="text-zinc-600 dark:text-zinc-400 mb-4">
              {project.data.description}
            </p>
            
            <a href={`/projects/${project.slug}`} class="text-accent hover:underline inline-flex items-center">
              View project details
              <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16" class="ml-1">
                <path fill-rule="evenodd" d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z"/>
              </svg>
            </a>
          </div>
        </article>
      ))}
    </div>
  </div>
</BaseLayout> 