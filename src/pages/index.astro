---
import { getCollection } from "astro:content";
import BaseLayout from "../layouts/BaseLayout.astro";
import { NeuralNetScene } from '../components/NeuralNetScene.tsx';

// Fetch all posts and derive a unique list of tags for the hero scene
const allPosts = await getCollection('blog');
const topics = [...new Set(allPosts.map(post => post.data.tags).flat().filter(Boolean))];

// Get the 3 most recent posts for the "Recent Writings" section
const recentBlogPosts = allPosts
	.filter(post => !post.data.draft)
	.sort((a, b) => b.data.pubDate.getTime() - a.data.pubDate.getTime())
	.slice(0, 3);

// Get the 2 most recent projects, with error handling
const recentProjects = await getCollection("projects")
	.then(projects => 
		projects.sort((a, b) => b.data.pubDate.getTime() - a.data.pubDate.getTime()).slice(0, 2)
	)
	.catch(() => []);
---

<BaseLayout>
	<div class="relative w-full h-screen">
		<div class="absolute inset-0 z-0 bg-gradient-to-r from-indigo-900 via-purple-900 to-fuchsia-900"></div>
		
		<!-- R3F Scene takes full screen -->
		<div class="absolute inset-0 z-10">
			<NeuralNetScene client:load topics={topics} />
		</div>

		<!-- Title bottom right -->
		<div class="absolute bottom-8 right-8 z-30 pointer-events-none">
			<h1 class="text-5xl md:text-7xl font-bold text-white text-right drop-shadow-lg">Blake's<br>Thoughts</h1>
		</div>
	</div>

	<main class="relative z-20 bg-slate-900/50 backdrop-blur-sm">
		<div class="max-w-7xl mx-auto px-6 space-y-24 py-20">
			<!-- Recent Writings Section -->
			<section>
				<div class="flex justify-between items-center mb-8">
					<h2 class="text-4xl font-bold bg-gradient-to-r from-gray-100 to-gray-400 bg-clip-text text-transparent">Recent Writings</h2>
					<a href="/blog" class="group/link flex items-center space-x-2 text-blue-400 hover:text-blue-300 font-medium">
						<span>View all</span>
						<svg class="w-4 h-4 group-hover/link:translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3" />
						</svg>
					</a>
				</div>
				<div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
					{recentBlogPosts.map(post => (
						<article class="group/card bg-white/5 border border-white/10 rounded-2xl p-6 hover:bg-white/10 transition-colors duration-300 hover:-translate-y-2 transform">
							<h3 class="font-bold text-xl mb-3 text-white/90 group-hover/card:text-blue-400 transition-colors">
								<a href={`/blog/${post.slug}`} class="stretched-link">{post.data.title}</a>
							</h3>
							<p class="text-white/60 mb-4 line-clamp-3">{post.data.description}</p>
							<time datetime={post.data.pubDate.toISOString()} class="text-sm text-white/40 font-medium">
								{post.data.pubDate.toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' })}
							</time>
						</article>
					))}
				</div>
			</section>
			
			<!-- Featured Projects Section -->
			<section>
				<div class="flex justify-between items-center mb-8">
					<h2 class="text-4xl font-bold bg-gradient-to-r from-gray-100 to-gray-400 bg-clip-text text-transparent">Featured Projects</h2>
					<a href="/projects" class="group/link flex items-center space-x-2 text-purple-400 hover:text-purple-300 font-medium">
						<span>View all</span>
						<svg class="w-4 h-4 group-hover/link:translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3" />
						</svg>
					</a>
				</div>
				<div class="grid md:grid-cols-2 gap-8">
					{recentProjects && recentProjects.length > 0 ? recentProjects.map(project => (
						<article class="group/card bg-white/5 border border-white/10 rounded-2xl p-8 hover:bg-white/10 transition-colors duration-300 hover:-translate-y-2 transform">
							<h3 class="font-bold text-xl mb-3 text-white/90 group-hover/card:text-purple-400 transition-colors">
								<a href={`/projects/${project.slug}`} class="stretched-link">{project.data.title}</a>
							</h3>
							<p class="text-white/60 mb-6 line-clamp-3">{project.data.description}</p>
							<div class="flex flex-wrap gap-2">
								{project.data.tech && project.data.tech.map(tech => (
									<span class="bg-gradient-to-r from-purple-500/20 to-blue-500/20 text-purple-300 text-sm px-3 py-1 rounded-full font-medium">{tech}</span>
								))}
							</div>
						</article>
					)) : (
						<div class="col-span-2 text-center py-12">
							<div class="bg-white/5 border border-white/10 rounded-2xl p-8">
								<div class="w-16 h-16 mx-auto mb-4 bg-gradient-to-br from-purple-600 to-blue-600 rounded-full flex items-center justify-center animate-pulse">
									<svg class="w-8 h-8 text-white/70" fill="none" stroke="currentColor" viewBox="0 0 24 24">
										<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10" />
									</svg>
								</div>
								<h3 class="text-xl font-semibold text-white/70 mb-2">Projects Coming Soon</h3>
								<p class="text-white/50">I'm working on some exciting projects. Check back soon for updates!</p>
							</div>
						</div>
					)}
				</div>
			</section>

			<section class="relative text-center py-16">
				<div class="absolute inset-0 bg-gradient-to-r from-blue-50 via-purple-50 to-indigo-50 dark:from-blue-950/10 dark:via-purple-950/10 dark:to-indigo-950/10 rounded-2xl"></div>
				<div class="relative z-10">
					<h2 class="text-4xl font-bold mb-6 gradient-text">Connect with me</h2>
					<p class="text-lg text-gray-600 dark:text-gray-300 mb-8 max-w-2xl mx-auto">
						Have questions or want to collaborate? I'm always open to interesting discussions about technology, philosophy, and creative endeavors.
					</p>
					<a href="/contact" class="inline-flex items-center space-x-2 bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white px-8 py-4 rounded-xl font-semibold shadow-lg hover:shadow-xl transform hover:-translate-y-1 transition-all duration-300">
						<span>Get in touch</span>
						<svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z" />
						</svg>
					</a>
				</div>
			</section>
		</div>
	</main>
</BaseLayout>
